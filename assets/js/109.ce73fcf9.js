(window.webpackJsonp=window.webpackJsonp||[]).push([[109],{791:function(t,e,s){"use strict";s.r(e);var a=s(10),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_1-简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-简介"}},[t._v("🌙")]),t._v(" 1.简介")]),t._v(" "),s("p",[t._v("Redux是react状态管理工具， 还有如Flux、Reflux、Mobx 等其他状态管理库可供选择")]),t._v(" "),s("h1",{attrs:{id:"_2-store"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-store"}},[t._v("🌙")]),t._v(" 2.Store")]),t._v(" "),s("p",[s("strong",[t._v("首先区分"),s("code",[t._v("state")]),t._v("与"),s("code",[t._v("store")])]),t._v(":")]),t._v(" "),s("p",[s("code",[t._v("state")]),t._v(" 是应用的状态，一般本质上是一个普通对象")]),t._v(" "),s("p",[s("code",[t._v("store")]),t._v(" 是应用状态 state 的管理者，包含下列四个函数：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("getState()")]),t._v(" # 获取整个 "),s("code",[t._v("state")])]),t._v(" "),s("li",[s("code",[t._v("dispatch(action)")]),t._v(" # ※ 触发 "),s("code",[t._v("state")]),t._v(" 改变的【唯一途径】※")]),t._v(" "),s("li",[s("code",[t._v("subscribe(listener)")]),t._v(" # 您可以理解成是 "),s("code",[t._v("DOM")]),t._v(" 中的 "),s("code",[t._v("addEventListener")])]),t._v(" "),s("li",[s("code",[t._v("replaceReducer(nextReducer)")]),t._v(" # 一般在 Webpack Code-Splitting 按需加载的时候用")])]),t._v(" "),s("p",[s("strong",[t._v("二者的关系是："),s("code",[t._v("state = store.getState()")])])]),t._v(" "),s("p",[t._v("Redux 规定，一个应用只应有一个"),s("strong",[t._v("单一的 store")]),t._v("，其管理着唯一的应用状态 state\nRedux 还规定，不能直接修改应用的状态 state，也就是说，下面的行为是不允许的：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" state "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" store"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nstate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("counter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("counter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 禁止在业务逻辑中直接修改 state")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[s("strong",[t._v("若要改变 state，必须 dispatch 一个 action，这是修改应用状态的不二法门")])]),t._v(" "),s("p",[s("strong",[t._v("action 只是一个包含 type 属性的普通对象即可")]),t._v("。例如 "),s("code",[t._v("{ type: 'INCREMENT' }")])]),t._v(" "),s("p",[t._v("上面提到，"),s("code",[t._v("state")]),t._v(" 是通过 "),s("code",[t._v("store.getState()")]),t._v(" 获取，那么 store 又是怎么来的呢？\n想生成一个 "),s("code",[t._v("store")]),t._v("，我们需要调用 Redux 的 "),s("code",[t._v("createStore")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" createStore "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'redux'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// store 是靠传入 reducer 生成的哦！")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" store "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createStore")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reducer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" initialState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[s("strong",[t._v("reducer 是一个 函数，负责更新并返回一个新的 state")]),t._v(",而 initialState 主要用于前后端同构的数据同步（详情请关注 React 服务端渲染）")]),t._v(" "),s("h1",{attrs:{id:"_3-action"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-action"}},[t._v("🌙")]),t._v(" 3.Action")]),t._v(" "),s("p",[s("strong",[t._v("action（动作）实质上是包含 type 属性的普通对象")]),t._v("，这个 "),s("code",[t._v("type")]),t._v(" 是我们实现用户行为追踪的关键\n例如，增加一个待办事项 的 "),s("code",[t._v("action")]),t._v(" 可能是像下面一样：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("{\n  type: 'ADD_TODO',\n  payload: {\n    id: 1,\n    content: '待办事项1',\n    completed: false\n  }\n}\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("p",[t._v("刨根问底，"),s("code",[t._v("action")]),t._v(" 是谁生成的呢？ —— "),s("code",[t._v("Action Creator")])]),t._v(" "),s("p",[t._v("顾名思义，"),s("code",[t._v("Action Creator")]),t._v(" 是 action 的创造者，本质上就是一个"),s("strong",[t._v("函数")]),t._v("，返回值是一个 "),s("code",[t._v("action")]),t._v("（"),s("strong",[t._v("对象")]),t._v("）\n例如下面就是一个 “新增一个待办事项” 的 "),s("code",[t._v("Action Creator")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addTodo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("content")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ADD_TODO'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    payload"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      content"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" content"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 待办事项内容")]),t._v("\n      completed"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是否完成的标识")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("h1",{attrs:{id:"_4-reducer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-reducer"}},[t._v("🌙")]),t._v(" 4.Reducer")]),t._v(" "),s("p",[s("strong",[t._v("reducer 的实质是一个函数")]),t._v("，根据 "),s("code",[t._v("action.type")]),t._v(" 来更新 "),s("code",[t._v("state")]),t._v(" 并返回 "),s("code",[t._v("nextState")]),t._v(",最后会用 "),s("code",[t._v("reducer")]),t._v(" 的返回值 "),s("code",[t._v("nextState")]),t._v(" 完全替换掉原来的 "),s("code",[t._v("state")])]),t._v(" "),s("blockquote",[s("p",[t._v("注意：上面的这个 “更新” 并不是指 "),s("code",[t._v("reducer")]),t._v(" 可以直接对 "),s("code",[t._v("state")]),t._v(" 进行修改\nRedux 规定，须先复制一份 "),s("code",[t._v("state")]),t._v("，在副本 "),s("code",[t._v("nextState")]),t._v(" 上进行修改操作\n例如，可以使用 lodash 的 "),s("code",[t._v("cloneDeep")]),t._v("，也可以使用 "),s("code",[t._v("Object.assign / map / filter/ ...")]),t._v(" 等返回副本的函数")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" initState "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  counter"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  todos"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reducer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("state "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" initState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" action")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("action"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ADD_TODO'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" nextState "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cloneDeep")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用到了 lodash 的深克隆")]),t._v("\n      nextState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("todos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("action"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("payload"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" nextState\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 由于 nextState 会把原 state 整个替换掉")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 若无修改，必须返回原 state（否则就是 undefined）")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" state\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br")])]),s("blockquote",[s("p",[t._v("通俗点讲，就是 "),s("code",[t._v("reducer")]),t._v(" 返回啥，"),s("code",[t._v("state")]),t._v(" 就被替换成啥")])]),t._v(" "),s("h1",{attrs:{id:"_5-redux-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-redux-api"}},[t._v("🌙")]),t._v(" 5.Redux API")]),t._v(" "),s("blockquote",[s("p",[s("a",{attrs:{href:"https://github.com/kenberkeley/redux-simple-tutorial/blob/master/redux-advanced-tutorial.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Redux API 总览"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/kenberkeley/redux-simple-tutorial/blob/master/middleware-onion-model.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("中间件的洋葱模型"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("Redux 有五个 API，分别是：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("createStore(reducer, [initialState])")]),t._v(" 创建store")]),t._v(" "),s("li",[s("code",[t._v("combineReducers(reducers)")]),t._v(" 管理多个reducer")]),t._v(" "),s("li",[s("code",[t._v("applyMiddleware(...middlewares)")]),t._v(" 管理中间件，如"),s("code",[t._v("redux-saga")])]),t._v(" "),s("li",[s("code",[t._v("bindActionCreators(actionCreators, dispatch)")]),t._v("实现自动 "),s("code",[t._v("dispatch")])]),t._v(" "),s("li",[s("code",[t._v("compose(...functions)")]),t._v("高阶函数")])]),t._v(" "),s("p",[s("code",[t._v("createStore")]),t._v(" 生成的 "),s("code",[t._v("store")]),t._v(" 有四个 API，分别是：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("getState()")])]),t._v(" "),s("li",[s("code",[t._v("dispatch(action)")])]),t._v(" "),s("li",[s("code",[t._v("subscribe(listener)")])]),t._v(" "),s("li",[s("code",[t._v("replaceReducer(nextReducer)")])])]),t._v(" "),s("h1",{attrs:{id:"小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("🌙")]),t._v(" 小结")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("store")]),t._v(" 由 Redux 的 "),s("code",[t._v("createStore(reducer)")]),t._v(" 生成")]),t._v(" "),s("li",[s("code",[t._v("state")]),t._v(" 通过 "),s("code",[t._v("store.getState()")]),t._v(" 获取，本质上一般是一个存储着整个应用状态的对象")]),t._v(" "),s("li",[s("code",[t._v("action")]),t._v(" 本质上是一个包含 "),s("code",[t._v("type")]),t._v(" 属性的普通对象，由 "),s("code",[t._v("Action Creator")]),t._v(" (函数) 产生")]),t._v(" "),s("li",[t._v("改变 "),s("code",[t._v("state")]),t._v(" 必须 "),s("code",[t._v("dispatch")]),t._v(" 一个 "),s("code",[t._v("action")])]),t._v(" "),s("li",[s("code",[t._v("reducer")]),t._v(" 本质上是根据 "),s("code",[t._v("action.type")]),t._v(" 来更新 "),s("code",[t._v("state")]),t._v(" 并返回 "),s("code",[t._v("nextState")]),t._v(" 的函数")]),t._v(" "),s("li",[s("code",[t._v("reducer")]),t._v(" 必须返回值，否则 "),s("code",[t._v("nextState")]),t._v(" 即为 "),s("code",[t._v("undefined")])])]),t._v(" "),s("p",[t._v("实际上，"),s("code",[t._v("state")]),t._v(" 就是所有 "),s("code",[t._v("reducer")]),t._v(" 返回值的汇总: "),s("code",[t._v("state + action = new state")])]),t._v(" "),s("blockquote",[s("p",[t._v("Action Creator => action => store.dispatch(action) => reducer(state, action) => 原 state state = nextState")])]),t._v(" "),s("p",[s("strong",[t._v("Redux 与传统后端 MVC 的对照")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Redux")]),t._v(" "),s("th",[t._v("传统后端 MVC")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("store")])]),t._v(" "),s("td",[t._v("数据库实例")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("state")])]),t._v(" "),s("td",[t._v("数据库中存储的数据")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("dispatch(action)")])]),t._v(" "),s("td",[t._v("用户发起请求")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("action: { type, payload }")])]),t._v(" "),s("td",[s("code",[t._v("type")]),t._v(" 表示请求的 URL，"),s("code",[t._v("payload")]),t._v(" 表示请求的数据")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("reducer")])]),t._v(" "),s("td",[t._v("路由 + 控制器（handler）")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("reducer")]),t._v(" 中的 "),s("code",[t._v("switch-case")]),t._v(" 分支")]),t._v(" "),s("td",[t._v("路由，根据 "),s("code",[t._v("action.type")]),t._v(" 路由到对应的控制器")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("reducer")]),t._v(" 内部对 "),s("code",[t._v("state")]),t._v(" 的处理")]),t._v(" "),s("td",[t._v("控制器对数据库进行增删改操作")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("reducer")]),t._v(" 返回 "),s("code",[t._v("nextState")])]),t._v(" "),s("td",[t._v("将修改后的记录写回数据库")])])])]),t._v(" "),s("blockquote",[s("p",[s("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2016/09/redux_tutorial_part_one_basic_usages.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Redux 入门教程（一）：基本用法"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2016/09/redux_tutorial_part_two_async_operations.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Redux 入门教程（二）：中间件与异步操作"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://redux-saga-in-chinese.js.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("中文官网：redux-saga"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.jianshu.com/p/6f96bdaaea22",target:"_blank",rel:"noopener noreferrer"}},[t._v("简书：Redux-saga"),s("OutboundLink")],1)])]),t._v(" "),s("iframe",{attrs:{src:"http://cn.redux.js.org/",width:"100%",height:"666px"}}),t._v("\n[Redux 中文文档](https://cn.redux.js.org/)\n")])}),[],!1,null,null,null);e.default=n.exports}}]);